<urlrewrite use-query-strings="true">


    <rule>
        <name>Canonical Hostnames</name>
        <note>
            The goal of this rule is to force the use of a particular hostname, in preference to other hostnames which
            may be used to reach the same site. For example, if you wish to force the use of www.example.com instead of
            example.com, you might use a variant of the following recipe.

            RewriteCond %{HTTP_HOST} !^fully\.qualified\.domain\.name [NC]
            RewriteCond %{HTTP_HOST} !^$
            RewriteRule ^/(.*) http://fully.qualified.domain.name/$1 [L,R]
        </note>
        <condition name="host" operator="notequal">^newscron\.com</condition>
        <condition name="host" operator="notequal">^app\.newscron\.com</condition>
        <condition name="host" operator="notequal">^$</condition>
        <from>^/(.*)</from>
        <to type="redirect" last="true">http://newscron.com/$1</to>
    </rule>


    <!-- This is to support the legacy path of Readability -->
    <rule>
        <from>/Readability/readability.jsp</from>
        <to>/Readability/?%{query-string}</to>
    </rule>


    <!-- This is to redirect the old app path -->
    <rule>
        <from>/app/</from>
        <to>/</to>
    </rule>

    <!-- This is to redirect the old app path -->
    <rule>
        <from>/app</from>
        <to>/</to>
    </rule>

    <rule>
        <name>Domain Name Check</name>
        <condition name="host" operator="notequal">newscron.com</condition>
        <from>(.*)</from>
        <to type="redirect">http://newscron.com$1</to>
    </rule>


    <!-- This is to manage article sharing -->
    <rule match-type="regex">
        <from>^/?(app|render)?/([0-9]+)/([0-9]+)([/|\\?|\\+|\\#|\\%|\\-|\\/].*)?$</from>
        <to>/topic/$2/article/$3</to>
    </rule>

    <!-- This is to manage publishers -->
    <rule match-type="regex">
        <from>^/?(publisher)?/([0-9]+)/([A-z]+)([/|\\?|\\+|\\#|\\%|\\-|\\/].*)?$</from>
        <to>/publisher/$2</to>
    </rule>


</urlrewrite>